@import "config.min.css";
/* --------------------------------------------------------------
	forms.css
		define default form styles
		* Thanks boilerplate for Normalize Form CSS
		Â© sacripant.fr
-------------------------------------------------------------- */ 


/*
//	RESET FORMS
*/

/* hand cursor on clickable elements */
.clickable, label, input[type=button], input[type=submit], button {cursor: pointer;}
button[disabled], input[disabled] { cursor: default; }
button, input, select, textarea { font-size: 100%; margin: 0; vertical-align: baseline; *vertical-align: middle; }

/*Debug input submit btn height*/
input[type="submit"]::-moz-focus-inner
{ 
	border: 0; 
	padding: 0; 
}
/*inherit color*/
/*input[type=button], input[type=submit], button { color: inherit; }*/

/*
//	Fieldset + legend
*/

/*Default fieldset : as a title*/
fieldset    { 
	margin-bottom: 1em;
}
legend      { 
	font-size: var(--fs-h6);
	white-space: nowrap; 
	border-bottom: 1px solid var(--color2-grey);
	display: block;
	width: 100%;
	padding-bottom: 0.33em;
	color: var(--color2-grey);
	text-transform: uppercase;
}
/*Fieldset border*/
.fieldset-border {
	margin: 0 0 1.5em 0; 
	border: 1px dashed var(--color2-grey); 
	padding: 0 1em 0.66em 1em;	
}
.fieldset-border legend {
	border-bottom: 0 none;
	padding-bottom: 0;
	width: auto;
}


/* 
//	Form item 
*/

.form-item	{ 
	padding-bottom: 0.33em;
	padding-top: 0.33em;
}

label, .label	{ 
	text-transform: uppercase; 
	font-size: .85em;  /* .small */
	color: var(--color2-grey);
	margin-bottom: calc( var(--vr) / 4)em;
}


/* 
//	Form fields
*/

input
, textarea
, select 
{
	background-color: transparent;
	min-width: 100%; max-width: 100%;
	padding: 0.33em;
	border: 0 dashed var(--color2-grey);
	border-bottom-width: 1px;
	height: 2em;
}
select {
	border-width: 1px;
	width: 100%;
}
input:focus
, textarea:focus
, select:focus 
{
	background-color: #fff;
}
input[type=checkbox]
, input[type=radio]
, input[type=submit]
, input[type="reset"] 
{
	min-width: 0;
	max-width: none;
}
textarea {
	border-width: 1px;
	font: inherit;
	resize: vertical;
}
input[type=checkbox]
, input[type=radio]
, textarea
, select[multiple]
{
	height: auto;	
}
input[type=file] { 
	border: 0 none; padding: 0; /*for firefox display*/ 
}
input[type=date] { 
	font: inherit; /*for chrome display*/
}


/*
//	Radio / checkbox list
*/

.form-list-chk, .form-list-rdo {
	height: 100%;
	list-style: none outside none;
	margin-top: 0;
	margin-bottom: 0;
}

/*For correct input alignement with sibling form-item if no label (for submit per ex)*/
.no-label input	{
	margin-top: 1.5em; /*cf typo line-height*/
}



/* 
//	Form item inline
*/

.inline-form input, .inline-form textarea, .inline-form select { 
	min-width: 0;
	width: auto;
	vertical-align: middle;
	border-width: 1px;
}
.inline-form li {
	margin-right: 1em; 
	float: left; 
	display: inline; 
}


/* 
//	Input group
*/

.input-group {
	display: table;
	width: 100%;
}
.input-group > * 
, .input-addon.btn
{
	display: table-cell;
	vertical-align: middle;
}
.input-group input {
	width: 100%;
}
.input-addon {
	width: 1%;
	/*background-color: #ddd;*/
	/*border: 1px solid #999;*/
	border-bottom: 1px dashed var(--color2-grey);
	white-space: nowrap;
}
/*use span for addon if you want a padding*/
span.input-addon {
	padding: 0 0.33em;	
}
.input-addon button 
, .input-addon input[type=submit]
{
	/*background: none;*/
	border: 0 none;
	width: auto;
	margin-bottom: -2px;
}



/*
*	Notifications
*	* Error
*	* notif
*	* success
*/

/*colors*/
.color-error	{ color: var(--color-error); }
.color-error-bg	{ color: var(--color-error-bg); }

.notif	{ 
	padding: .5em; 
	margin-bottom: 1em; 
	border: 1px solid; 
}

.error		{ 
	color: var(--color-error);
}
.notif.error 
, .error input
, .error textarea
, .error select
{
	background: var(--color-error-bg); 	
}
.notice		{ 
	background: #d1ecf7; 
	color: #11689e; 
}
.success	{ 
	background: #E6EFC2; 
	color: #264409; 
}

.error a,				{ color: #8a1f11; }
.notice a               { color: #514721; }
.success a              { color: #264409; }


/* 
//	Required field
//	add * after label.required 
*/

label.required:after	{ content: " *"; color: var(--color-error); }
